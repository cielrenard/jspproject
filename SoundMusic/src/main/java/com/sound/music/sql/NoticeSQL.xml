<?xml version="1.0" encoding="UTF-8"?>
<!-- xml파일이므로 무조건 xml선언
	사용 가능한 element, attribute 등을 정의방법
	1. dtd 문서
	2. 스키마문서 -->
<!DOCTYPE mapper PUBLIC 
				"-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 최상위 클래스는 mapper이다. -->
<!-- namespace 를 등록하는 이유 : 중복충돌을 막기위해 여러개의 sql용 xml 파일이 만들어 지게 된다.  나중에 DAO가 이 파일에 등록된 질의명령을 가지고 가야하고
	여러 개의 파일이 존재하므로 어떤 파일을 가져가야 할지 모르므로 각각의 파일을 구분하기 위한 목적으로 등록을 해줘야 한다. -->
<mapper namespace="notice">
	<!--  질의문 하나당 질의문 구분하기위한 태그가 필요	태그이름은 질의문종류에 따라 구분해서 사용 id는 질의명령을 구분하기위한 역할로서 unique 해야한다.	 -->
		<!-- 01. 게시글 전체 목록 조회. -->
		<select id="lisAll" resultType="com.sound.music.vo.NoticeVO">
		SELECT
			N_NO AS no,
			N_TITLE AS title,
			N_CONTENTS AS content,
			M_ID AS writer,
			N_DATE AS regdate,
			N_VIEWCNT AS viewcnt
		FROM NOTICE
		WHERE 
			N_ISSHOW='Y'
		ORDER BY
			no desc,
			regdate desc
		
		</select>
	<!--  02. 게시글 작성 -->
		<insert id="insert">
			INSERT INTO NOTICE (N_NO,N_title,N_contents,M_id,N_date,N_viewcnt,N_isshow) values 
			((SELECT NVL(MAX(N_NO),0)+1 from notice),#{title},#{content},#{writer},SYSDATE,0,'Y')
		</insert>
	<!--  03. 게시글 상세보기 조회 -->
		<select id="view" resultType="com.sound.music.vo.NoticeVO">
			SELECT
				N_NO AS no,
				N_TITLE AS title,
				N_CONTENTS AS content,
				M_ID AS writer,
				N_DATE AS regdate,
				N_VIEWCNT AS viewcnt
					FROM NOTICE
						WHERE no = #{no}
		</select>
	<!--  04. 게시글 조회수 증가 처리  -->
		<update id="increaseViewcnt">
			UPDATE notice SET N_viewcnt = n_viewcnt +1 where n_no = #{no}
		</update>
	<!-- 05. 게시글 수정 처리 -->	
		<update id="updateArticle">
			update notice set
				N_title = #{title},
				N_contents = #{content},
				m_id = #{writer}
					where n_no = #{no}
		</update>
	<!--  06. 게시글 삭제 처리 -->
		<update id="deleteArticle">
			Update notice set
				N_isshow = 'N'
					where n_no =#{no}
		</update>
</mapper>
