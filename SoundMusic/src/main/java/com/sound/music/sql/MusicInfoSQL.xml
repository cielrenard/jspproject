<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
				"-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="musicinfo">
	<!-- 01. 음악 리스트 만들기 -->
	<select id="listinfo" parameterType="com.sound.music.vo.MusicInfoVO" resultType="com.sound.music.vo.MusicInfoVO">
		SELECT 
				*
		FROM	
			(SELECT
				MU_NO AS no,
				MU_TITLE AS title,
				MU_ARTIST AS artist,
				MU_ALBUM AS album,
				MU_GENRE AS genre,
				MU_IMAGEPATH AS path,
				MU_STAR AS star,
				ROW_NUMBER() OVER(ORDER BY MU_STAR ASC) AS rno
			 FROM
				MUSIC
			 WHERE
				UPPER(MU_ISSHOW)='Y' 
				<if test="genre != ''">
					AND MU_GENRE = #{genre}
				</if>
				
				<if test="sub eq 0">
					<if test="svalue != ''">
						AND 
							MU_TITLE like '%'||#{svalue}||'%' 
						OR 
							MU_ARTIST like '%'||#{svalue}||'%'  
						OR 
							MU_ALBUM like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 1">
					<if test="svalue != ''">
						AND MU_TITLE like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 2">
					<if test="svalue != ''">
						AND MU_ARTIST like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 3">
					<if test="svalue != ''">
						AND MU_ALBUM like '%'||#{svalue}||'%'
					</if>
				</if>
				)
		WHERE 
			rno BETWEEN #{start} AND #{end}
	</select>			
	<!-- 02. 음악 상세정보조회  -->
	<select id="minfo" parameterType="int" resultType="com.sound.music.vo.MusicInfoVO">
		SELECT 
			MU_NO as no,
			MU_TITLE as title,
			MU_ARTIST as artist,
			MU_ALBUM as album,
			MU_IMAGEPATH as path,
			MU_GENRE as genre,
			MU_LYRICS as lyrics,
			MU_STAR as star
		FROM
			MUSIC
		WHERE
			MU_ISSHOW='Y'
		AND 
			MU_NO = #{no}	
	</select>
	<!-- 03. 페이징처리를 위한 음악 개수 구하기 -->
	<select id ="totalCount" parameterType="com.sound.music.vo.MusicInfoVO" resultType="int">
		SELECT
			COUNT(*) as cnt
		FROM
			MUSIC
		WHERE 
			MU_ISSHOW='Y' 
				<if test="genre != ''">
					AND MU_GENRE = #{genre}
				</if>
		
				<if test="sub eq 0">
					<if test="svalue != ''">
						AND 
							MU_TITLE like '%'||#{svalue}||'%' 
						OR 
							MU_ARTIST like '%'||#{svalue}||'%'
						OR 
							MU_ALBUM like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 1">
					<if test="svalue != ''">
						AND MU_title like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 2">
					<if test="svalue != ''">
						AND MU_ARTIST like '%'||#{svalue}||'%'
					</if>
				</if>
				<if test="sub eq 3">
					<if test="svalue != ''">
						AND MU_ALBUM like '%'||#{svalue}||'%'
					</if>
				</if>	
	</select>
	<!-- 04. 음악 리스트 추가  -->	
	<insert id="insertMusic" parameterType="com.sound.music.vo.MusicInfoVO">
	INSERT
		INTO MUSIC
		VALUES((SELECT NVL(MAX(MU_NO),0)+1 FROM MUSIC),
		#{title},#{artist},#{album},#{path},#{genre},#{lyrics},'Y',0
	)
	</insert>
	<!-- 05. 상세보기 내용 수정 -->
	<update id="updateMusic" parameterType="com.sound.music.vo.MusicInfoVO">
		UPDATE MUSIC
			SET 
			MU_TITLE = #{title},
			MU_ARTIST = #{artist},
			MU_ALBUM = #{album},
			MU_IMAGEPATH = #{path},
			MU_GENRE = #{genre},
			MU_LYRICS = #{lyrics}
		WHERE
			MU_NO = #{no}
	</update>
	<!-- 06. 음악 삭제 -->
	<update id="deleteMusic" parameterType="int">
		UPDATE MUSIC
			SET
			MU_ISSHOW='N' 
		WHERE MU_NO = #{no}
	</update>
	<!-- 07.후기 쓰기 -->
	<insert id="reviewWrite" parameterType="com.sound.music.vo.MusicInfoVO">
		INSERT INTO
			MURE
		VALUES((SELECT NVL(MAX(MUB_NO),0)+1 FROM MURE),
		#{oriNo},#{id},#{body},SYSDATE,'Y'
		)
	</insert>
	<!-- 08.후기 리스트 -->
	<select id="rvList" parameterType="com.sound.music.vo.MusicInfoVO" resultType="com.sound.music.vo.MusicInfoVO">
		SELECT 
				*
		FROM	
			(SELECT
				MUB_NO AS no,
				MUB_ORINO AS oriNo,
				MUB_WRITER AS writer,
				MUB_BODY AS body,
				MUB_DATE AS wdate,
				ROW_NUMBER() OVER(ORDER BY MUB_NO DESC) AS rno
			 FROM
				MURE
			 WHERE
				UPPER(MUB_ISSHOW)='Y' 
				AND MUB_ORINO = #{oriNo}
			)	 
		WHERE 
			rno BETWEEN #{start} AND #{end}
	</select>
	<!-- 09.후기 페이징을위한 개수 가져오기 -->	
	<select id="rvTotalCount" parameterType="int" resultType="int">
		SELECT	
			COUNT(*)
		FROM
			MURE
		WHERE 
			UPPER(MUB_ISSHOW)='Y'
			AND MUB_ORINO = #{oriNo}
	</select>
	<!-- 10.후기 수정 -->
	<update id="reviewUpdate" parameterType="com.sound.music.vo.MusicInfoVO">
		UPDATE MURE
			SET
			MUB_DATE = SYSDATE,
			MUB_BODY = #{body}
		WHERE
			MUB_NO = #{no} 	
	</update>
	<!-- 11.후기 삭제 -->
	<update id="reviewDelete" parameterType="int">
		UPDATE MURE
			SET
			MUB_ISSHOW = 'N'
		WHERE
			MUB_NO = #{rvno}
	</update>	
</mapper>				